name: Backend Build & Deploy to ECR

on:
  push:
    branches:
      - "master"
      - "feat_*"
  workflow_dispatch:
    inputs:
      backend_tag:
        description: "Tag for backend image"
        required: false
        default: "backend"

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build & Push Backend
        run: |
          BACKEND_TAG="backend"
          if [ -z "$BACKEND_TAG" ]; then
            BACKEND_TAG=backend
          fi

          docker build -t ${{ secrets.ECR_REGISTRY }}/hazem/backend:$BACKEND_TAG ./backend
          docker push ${{ secrets.ECR_REGISTRY }}/hazem/backend:$BACKEND_TAG

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.1
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy Backend on EC2
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
            # Authenticate EC2 with ECR (token expires every 12h)
            aws ecr get-login-password --region ${{ secrets.AWS_REGION }} \
              | sudo docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}

            cd /app
            sudo docker-compose pull backend
            sudo docker-compose up -d backend
          EOF
